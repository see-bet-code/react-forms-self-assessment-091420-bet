{"ast":null,"code":"'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar compileRoute = require('./compile-route');\n\nvar FetchMock = function FetchMock() {\n  this.routes = [];\n  this._calls = {};\n  this._matchedCalls = [];\n  this._unmatchedCalls = [];\n  this._holdingPromises = [];\n  this.bindMethods();\n};\n\nFetchMock.prototype.bindMethods = function () {\n  this.fetchMock = FetchMock.prototype.fetchMock.bind(this);\n  this.restore = FetchMock.prototype.restore.bind(this);\n  this.reset = FetchMock.prototype.reset.bind(this);\n};\n\nFetchMock.prototype.mock = function (matcher, response, options) {\n  var route = void 0; // Handle the variety of parameters accepted by mock (see README)\n\n  if (matcher && response && options) {\n    route = _extends({\n      matcher: matcher,\n      response: response\n    }, options);\n  } else if (matcher && response) {\n    route = {\n      matcher: matcher,\n      response: response\n    };\n  } else if (matcher && matcher.matcher) {\n    route = matcher;\n  } else {\n    throw new Error('Invalid parameters passed to fetch-mock');\n  }\n\n  this.addRoute(route);\n  return this._mock();\n};\n\nFetchMock.prototype.once = function (matcher, response, options) {\n  return this.mock(matcher, response, _extends({}, options, {\n    times: 1\n  }));\n};\n\nFetchMock.prototype._mock = function () {\n  if (!this.isSandbox) {\n    // Do this here rather than in the constructor to ensure it's scoped to the test\n    this.realFetch = this.realFetch || FetchMock.global.fetch;\n    FetchMock.global.fetch = this.fetchMock;\n  }\n\n  return this;\n};\n\nFetchMock.prototype._unMock = function () {\n  if (this.realFetch) {\n    FetchMock.global.fetch = this.realFetch;\n    this.realFetch = null;\n  }\n\n  this.fallbackResponse = null;\n  return this;\n};\n\nFetchMock.prototype.catch = function (response) {\n  if (this.fallbackResponse) {\n    console.warn('calling fetchMock.catch() twice - are you sure you want to overwrite the previous fallback response');\n  }\n\n  this.fallbackResponse = response || 'ok';\n  return this._mock();\n};\n\nFetchMock.prototype.spy = function () {\n  this._mock();\n\n  return this.catch(this.realFetch);\n};\n\nFetchMock.prototype.fetchMock = function (url, opts) {\n  var _this = this;\n\n  var Promise = this.Promise || FetchMock.Promise;\n  var resolveHoldingPromise = void 0;\n  var holdingPromise = new Promise(function (res) {\n    return resolveHoldingPromise = res;\n  });\n\n  this._holdingPromises.push(holdingPromise);\n\n  var response = this.router(url, opts);\n\n  if (!response) {\n    console.warn('Unmatched ' + (opts && opts.method || 'GET') + ' to ' + url);\n    this.push(null, [url, opts]);\n\n    if (this.fallbackResponse) {\n      response = this.fallbackResponse;\n    } else {\n      throw new Error('No fallback response defined for ' + (opts && opts.method || 'GET') + ' to ' + url);\n    }\n  }\n\n  if (typeof response === 'function') {\n    response = response(url, opts);\n  }\n\n  if (typeof response.then === 'function') {\n    var responsePromise = response.then(function (response) {\n      return _this.mockResponse(url, response, opts, resolveHoldingPromise);\n    });\n    return Promise.resolve(responsePromise); // Ensure Promise is always our implementation.\n  } else {\n    return this.mockResponse(url, response, opts, resolveHoldingPromise);\n  }\n};\n\nFetchMock.prototype.router = function (url, opts) {\n  var route = void 0;\n\n  for (var i = 0, il = this.routes.length; i < il; i++) {\n    route = this.routes[i];\n\n    if (route.matcher(url, opts)) {\n      this.push(route.name, [url, opts]);\n      return route.response;\n    }\n  }\n};\n\nFetchMock.prototype.addRoute = function (route) {\n  if (!route) {\n    throw new Error('.mock() must be passed configuration for a route');\n  } // Allows selective application of some of the preregistered routes\n\n\n  this.routes.push(compileRoute(route, FetchMock.Request, FetchMock.Headers));\n};\n\nFetchMock.prototype.mockResponse = function (url, responseConfig, fetchOpts, resolveHoldingPromise) {\n  var Promise = this.Promise || FetchMock.Promise; // It seems odd to call this in here even though it's already called within fetchMock\n  // It's to handle the fact that because we want to support making it very easy to add a\n  // delay to any sort of response (including responses which are defined with a function)\n  // while also allowing function responses to return a Promise for a response config.\n\n  if (typeof responseConfig === 'function') {\n    responseConfig = responseConfig(url, fetchOpts);\n  } // If the response is a pre-made Response, respond with it\n\n\n  if (FetchMock.Response.prototype.isPrototypeOf(responseConfig)) {\n    return this.respond(Promise.resolve(responseConfig), resolveHoldingPromise);\n  } // If the response says to throw an error, throw it\n\n\n  if (responseConfig.throws) {\n    return this.respond(Promise.reject(responseConfig.throws), resolveHoldingPromise);\n  } // If the response config looks like a status, start to generate a simple response\n\n\n  if (typeof responseConfig === 'number') {\n    responseConfig = {\n      status: responseConfig\n    }; // If the response config is not an object, or is an object that doesn't use\n    // any reserved properties, assume it is meant to be the body of the response\n  } else if (typeof responseConfig === 'string' || !(responseConfig.body || responseConfig.headers || responseConfig.throws || responseConfig.status || responseConfig.__redirectUrl)) {\n    responseConfig = {\n      body: responseConfig\n    };\n  } // Now we are sure we're dealing with a response config object, so start to\n  // construct a real response from it\n\n\n  var opts = responseConfig.opts || {}; // set the response url\n\n  opts.url = responseConfig.__redirectUrl || url; // Handle a reasonably common misuse of the library - returning an object\n  // with the property 'status'\n\n  if (responseConfig.status && (typeof responseConfig.status !== 'number' || parseInt(responseConfig.status, 10) !== responseConfig.status || responseConfig.status < 200 || responseConfig.status > 599)) {\n    throw new TypeError('Invalid status ' + responseConfig.status + ' passed on response object.\\nTo respond with a JSON object that has status as a property assign the object to body\\ne.g. {\"body\": {\"status: \"registered\"}}');\n  } // set up the response status\n\n\n  opts.status = responseConfig.status || 200;\n  opts.statusText = FetchMock.statusTextMap['' + opts.status]; // Set up response headers. The ternary operator is to cope with\n  // new Headers(undefined) throwing in Chrome\n  // https://code.google.com/p/chromium/issues/detail?id=335871\n\n  opts.headers = responseConfig.headers ? new FetchMock.Headers(responseConfig.headers) : new FetchMock.Headers(); // start to construct the body\n\n  var body = responseConfig.body; // convert to json if we need to\n\n  opts.sendAsJson = responseConfig.sendAsJson === undefined ? FetchMock.config.sendAsJson : responseConfig.sendAsJson;\n\n  if (opts.sendAsJson && responseConfig.body != null && (typeof body === 'undefined' ? 'undefined' : _typeof(body)) === 'object') {\n    //eslint-disable-line\n    body = JSON.stringify(body);\n  } // add a Content-Length header if we need to\n\n\n  opts.includeContentLength = responseConfig.includeContentLength === undefined ? FetchMock.config.includeContentLength : responseConfig.includeContentLength;\n\n  if (opts.includeContentLength && typeof body === 'string' && !opts.headers.has('Content-Length')) {\n    opts.headers.set('Content-Length', body.length.toString());\n  } // On the server we need to manually construct the readable stream for the\n  // Response object (on the client this is done automatically)\n\n\n  if (FetchMock.stream) {\n    var s = new FetchMock.stream.Readable();\n\n    if (body != null) {\n      //eslint-disable-line\n      s.push(body, 'utf-8');\n    }\n\n    s.push(null);\n    body = s;\n  }\n\n  var response = new FetchMock.Response(body, opts); // When mocking a followed redirect we must wrap the response in an object\n  // which sets the redirected flag (not a writable property on the actual response)\n\n  if (responseConfig.__redirectUrl) {\n    response = Object.create(response, {\n      redirected: {\n        value: true\n      },\n      url: {\n        value: responseConfig.__redirectUrl\n      },\n      // TODO extend to all other methods as requested by users\n      // Such a nasty hack\n      text: {\n        value: response.text.bind(response)\n      },\n      json: {\n        value: response.json.bind(response)\n      }\n    });\n  }\n\n  return this.respond(Promise.resolve(response), resolveHoldingPromise);\n};\n\nFetchMock.prototype.respond = function (response, resolveHoldingPromise) {\n  response.then(resolveHoldingPromise, resolveHoldingPromise);\n  return response;\n};\n\nFetchMock.prototype.flush = function () {\n  return Promise.all(this._holdingPromises);\n};\n\nFetchMock.prototype.push = function (name, call) {\n  if (name) {\n    this._calls[name] = this._calls[name] || [];\n\n    this._calls[name].push(call);\n\n    this._matchedCalls.push(call);\n  } else {\n    this._unmatchedCalls.push(call);\n  }\n};\n\nFetchMock.prototype.restore = function () {\n  this._unMock();\n\n  this.reset();\n  this.routes = [];\n  return this;\n};\n\nFetchMock.prototype.reset = function () {\n  this._calls = {};\n  this._matchedCalls = [];\n  this._unmatchedCalls = [];\n  this._holdingPromises = [];\n  this.routes.forEach(function (route) {\n    return route.reset && route.reset();\n  });\n  return this;\n};\n\nFetchMock.prototype.calls = function (name) {\n  return name ? this._calls[name] || [] : {\n    matched: this._matchedCalls,\n    unmatched: this._unmatchedCalls\n  };\n};\n\nFetchMock.prototype.lastCall = function (name) {\n  var calls = name ? this.calls(name) : this.calls().matched;\n\n  if (calls && calls.length) {\n    return calls[calls.length - 1];\n  } else {\n    return undefined;\n  }\n};\n\nFetchMock.prototype.lastUrl = function (name) {\n  var call = this.lastCall(name);\n  return call && call[0];\n};\n\nFetchMock.prototype.lastOptions = function (name) {\n  var call = this.lastCall(name);\n  return call && call[1];\n};\n\nFetchMock.prototype.called = function (name) {\n  if (!name) {\n    return !!(this._matchedCalls.length || this._unmatchedCalls.length);\n  }\n\n  return !!(this._calls[name] && this._calls[name].length);\n};\n\nFetchMock.prototype.done = function (name) {\n  var _this2 = this;\n\n  var names = name ? [name] : this.routes.map(function (r) {\n    return r.name;\n  }); // Can't use array.every because\n  // a) not widely supported\n  // b) would exit after first failure, which would break the logging\n\n  return names.map(function (name) {\n    if (!_this2.called(name)) {\n      console.warn('Warning: ' + name + ' not called');\n      return false;\n    } // would use array.find... but again not so widely supported\n\n\n    var expectedTimes = (_this2.routes.filter(function (r) {\n      return r.name === name;\n    }) || [{}])[0].times;\n\n    if (!expectedTimes) {\n      return true;\n    }\n\n    var actualTimes = _this2.calls(name).length;\n\n    if (expectedTimes > actualTimes) {\n      console.warn('Warning: ' + name + ' only called ' + actualTimes + ' times, but ' + expectedTimes + ' expected');\n      return false;\n    } else {\n      return true;\n    }\n  }).filter(function (bool) {\n    return !bool;\n  }).length === 0;\n};\n\nFetchMock.config = {\n  includeContentLength: false,\n  sendAsJson: true\n};\n\nFetchMock.prototype.configure = function (opts) {\n  _extends(FetchMock.config, opts);\n};\n\nFetchMock.setImplementations = FetchMock.prototype.setImplementations = function (implementations) {\n  FetchMock.Headers = implementations.Headers || FetchMock.Headers;\n  FetchMock.Request = implementations.Request || FetchMock.Request;\n  FetchMock.Response = implementations.Response || FetchMock.Response;\n  FetchMock.Promise = implementations.Promise || FetchMock.Promise;\n};\n\nFetchMock.prototype.sandbox = function (Promise) {\n  if (this.routes.length || this.fallbackResponse) {\n    throw new Error('.sandbox() can only be called on fetch-mock instances that don\\'t have routes configured already');\n  }\n\n  var instance = new FetchMock(); // this construct allows us to create a fetch-mock instance which is also\n  // a callable function, while circumventing circularity when defining the\n  // object that this function should be bound to\n\n  var boundMock = void 0;\n\n  var proxy = function proxy() {\n    return boundMock.apply(null, arguments);\n  };\n\n  var functionInstance = _extends(proxy, // Ensures that the entire returned object is a callable function\n  FetchMock.prototype, // all prototype methods\n  instance // instance data\n  );\n\n  functionInstance.bindMethods();\n  boundMock = functionInstance.fetchMock;\n  functionInstance.isSandbox = true;\n\n  if (Promise) {\n    functionInstance.Promise = Promise;\n  }\n\n  return functionInstance;\n};\n\n['get', 'post', 'put', 'delete', 'head', 'patch'].forEach(function (method) {\n  FetchMock.prototype[method] = function (matcher, response, options) {\n    return this.mock(matcher, response, _extends({}, options, {\n      method: method.toUpperCase()\n    }));\n  };\n\n  FetchMock.prototype[method + 'Once'] = function (matcher, response, options) {\n    return this.once(matcher, response, _extends({}, options, {\n      method: method.toUpperCase()\n    }));\n  };\n});\nmodule.exports = FetchMock;","map":{"version":3,"sources":["/Users/Heather/Flatiron/code/Phase4/react-forms-self-assessment-091420-bet/node_modules/fetch-mock/es5/fetch-mock.js"],"names":["_typeof","Symbol","iterator","obj","constructor","prototype","_extends","Object","assign","target","i","arguments","length","source","key","hasOwnProperty","call","compileRoute","require","FetchMock","routes","_calls","_matchedCalls","_unmatchedCalls","_holdingPromises","bindMethods","fetchMock","bind","restore","reset","mock","matcher","response","options","route","Error","addRoute","_mock","once","times","isSandbox","realFetch","global","fetch","_unMock","fallbackResponse","catch","console","warn","spy","url","opts","_this","Promise","resolveHoldingPromise","holdingPromise","res","push","router","method","then","responsePromise","mockResponse","resolve","il","name","Request","Headers","responseConfig","fetchOpts","Response","isPrototypeOf","respond","throws","reject","status","body","headers","__redirectUrl","parseInt","TypeError","statusText","statusTextMap","sendAsJson","undefined","config","JSON","stringify","includeContentLength","has","set","toString","stream","s","Readable","create","redirected","value","text","json","flush","all","forEach","calls","matched","unmatched","lastCall","lastUrl","lastOptions","called","done","_this2","names","map","r","expectedTimes","filter","actualTimes","bool","configure","setImplementations","implementations","sandbox","instance","boundMock","proxy","apply","functionInstance","toUpperCase","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar compileRoute = require('./compile-route');\n\nvar FetchMock = function FetchMock() {\n\n\tthis.routes = [];\n\tthis._calls = {};\n\tthis._matchedCalls = [];\n\tthis._unmatchedCalls = [];\n\tthis._holdingPromises = [];\n\tthis.bindMethods();\n};\n\nFetchMock.prototype.bindMethods = function () {\n\tthis.fetchMock = FetchMock.prototype.fetchMock.bind(this);\n\tthis.restore = FetchMock.prototype.restore.bind(this);\n\tthis.reset = FetchMock.prototype.reset.bind(this);\n};\n\nFetchMock.prototype.mock = function (matcher, response, options) {\n\n\tvar route = void 0;\n\n\t// Handle the variety of parameters accepted by mock (see README)\n\tif (matcher && response && options) {\n\t\troute = _extends({\n\t\t\tmatcher: matcher,\n\t\t\tresponse: response\n\t\t}, options);\n\t} else if (matcher && response) {\n\t\troute = {\n\t\t\tmatcher: matcher,\n\t\t\tresponse: response\n\t\t};\n\t} else if (matcher && matcher.matcher) {\n\t\troute = matcher;\n\t} else {\n\t\tthrow new Error('Invalid parameters passed to fetch-mock');\n\t}\n\n\tthis.addRoute(route);\n\n\treturn this._mock();\n};\n\nFetchMock.prototype.once = function (matcher, response, options) {\n\treturn this.mock(matcher, response, _extends({}, options, { times: 1 }));\n};\n\nFetchMock.prototype._mock = function () {\n\tif (!this.isSandbox) {\n\t\t// Do this here rather than in the constructor to ensure it's scoped to the test\n\t\tthis.realFetch = this.realFetch || FetchMock.global.fetch;\n\t\tFetchMock.global.fetch = this.fetchMock;\n\t}\n\treturn this;\n};\n\nFetchMock.prototype._unMock = function () {\n\tif (this.realFetch) {\n\t\tFetchMock.global.fetch = this.realFetch;\n\t\tthis.realFetch = null;\n\t}\n\tthis.fallbackResponse = null;\n\treturn this;\n};\n\nFetchMock.prototype.catch = function (response) {\n\tif (this.fallbackResponse) {\n\t\tconsole.warn('calling fetchMock.catch() twice - are you sure you want to overwrite the previous fallback response');\n\t}\n\tthis.fallbackResponse = response || 'ok';\n\treturn this._mock();\n};\n\nFetchMock.prototype.spy = function () {\n\tthis._mock();\n\treturn this.catch(this.realFetch);\n};\n\nFetchMock.prototype.fetchMock = function (url, opts) {\n\tvar _this = this;\n\n\tvar Promise = this.Promise || FetchMock.Promise;\n\tvar resolveHoldingPromise = void 0;\n\tvar holdingPromise = new Promise(function (res) {\n\t\treturn resolveHoldingPromise = res;\n\t});\n\tthis._holdingPromises.push(holdingPromise);\n\tvar response = this.router(url, opts);\n\n\tif (!response) {\n\t\tconsole.warn('Unmatched ' + (opts && opts.method || 'GET') + ' to ' + url);\n\t\tthis.push(null, [url, opts]);\n\n\t\tif (this.fallbackResponse) {\n\t\t\tresponse = this.fallbackResponse;\n\t\t} else {\n\t\t\tthrow new Error('No fallback response defined for ' + (opts && opts.method || 'GET') + ' to ' + url);\n\t\t}\n\t}\n\n\tif (typeof response === 'function') {\n\t\tresponse = response(url, opts);\n\t}\n\n\tif (typeof response.then === 'function') {\n\t\tvar responsePromise = response.then(function (response) {\n\t\t\treturn _this.mockResponse(url, response, opts, resolveHoldingPromise);\n\t\t});\n\t\treturn Promise.resolve(responsePromise); // Ensure Promise is always our implementation.\n\t} else {\n\t\treturn this.mockResponse(url, response, opts, resolveHoldingPromise);\n\t}\n};\n\nFetchMock.prototype.router = function (url, opts) {\n\tvar route = void 0;\n\tfor (var i = 0, il = this.routes.length; i < il; i++) {\n\t\troute = this.routes[i];\n\t\tif (route.matcher(url, opts)) {\n\t\t\tthis.push(route.name, [url, opts]);\n\t\t\treturn route.response;\n\t\t}\n\t}\n};\n\nFetchMock.prototype.addRoute = function (route) {\n\n\tif (!route) {\n\t\tthrow new Error('.mock() must be passed configuration for a route');\n\t}\n\n\t// Allows selective application of some of the preregistered routes\n\tthis.routes.push(compileRoute(route, FetchMock.Request, FetchMock.Headers));\n};\n\nFetchMock.prototype.mockResponse = function (url, responseConfig, fetchOpts, resolveHoldingPromise) {\n\tvar Promise = this.Promise || FetchMock.Promise;\n\n\t// It seems odd to call this in here even though it's already called within fetchMock\n\t// It's to handle the fact that because we want to support making it very easy to add a\n\t// delay to any sort of response (including responses which are defined with a function)\n\t// while also allowing function responses to return a Promise for a response config.\n\tif (typeof responseConfig === 'function') {\n\t\tresponseConfig = responseConfig(url, fetchOpts);\n\t}\n\n\t// If the response is a pre-made Response, respond with it\n\tif (FetchMock.Response.prototype.isPrototypeOf(responseConfig)) {\n\t\treturn this.respond(Promise.resolve(responseConfig), resolveHoldingPromise);\n\t}\n\n\t// If the response says to throw an error, throw it\n\tif (responseConfig.throws) {\n\t\treturn this.respond(Promise.reject(responseConfig.throws), resolveHoldingPromise);\n\t}\n\n\t// If the response config looks like a status, start to generate a simple response\n\tif (typeof responseConfig === 'number') {\n\t\tresponseConfig = {\n\t\t\tstatus: responseConfig\n\t\t};\n\t\t// If the response config is not an object, or is an object that doesn't use\n\t\t// any reserved properties, assume it is meant to be the body of the response\n\t} else if (typeof responseConfig === 'string' || !(responseConfig.body || responseConfig.headers || responseConfig.throws || responseConfig.status || responseConfig.__redirectUrl)) {\n\t\tresponseConfig = {\n\t\t\tbody: responseConfig\n\t\t};\n\t}\n\n\t// Now we are sure we're dealing with a response config object, so start to\n\t// construct a real response from it\n\tvar opts = responseConfig.opts || {};\n\n\t// set the response url\n\topts.url = responseConfig.__redirectUrl || url;\n\n\t// Handle a reasonably common misuse of the library - returning an object\n\t// with the property 'status'\n\tif (responseConfig.status && (typeof responseConfig.status !== 'number' || parseInt(responseConfig.status, 10) !== responseConfig.status || responseConfig.status < 200 || responseConfig.status > 599)) {\n\t\tthrow new TypeError('Invalid status ' + responseConfig.status + ' passed on response object.\\nTo respond with a JSON object that has status as a property assign the object to body\\ne.g. {\"body\": {\"status: \"registered\"}}');\n\t}\n\n\t// set up the response status\n\topts.status = responseConfig.status || 200;\n\topts.statusText = FetchMock.statusTextMap['' + opts.status];\n\n\t// Set up response headers. The ternary operator is to cope with\n\t// new Headers(undefined) throwing in Chrome\n\t// https://code.google.com/p/chromium/issues/detail?id=335871\n\topts.headers = responseConfig.headers ? new FetchMock.Headers(responseConfig.headers) : new FetchMock.Headers();\n\n\t// start to construct the body\n\tvar body = responseConfig.body;\n\n\t// convert to json if we need to\n\topts.sendAsJson = responseConfig.sendAsJson === undefined ? FetchMock.config.sendAsJson : responseConfig.sendAsJson;\n\tif (opts.sendAsJson && responseConfig.body != null && (typeof body === 'undefined' ? 'undefined' : _typeof(body)) === 'object') {\n\t\t//eslint-disable-line\n\t\tbody = JSON.stringify(body);\n\t}\n\n\t// add a Content-Length header if we need to\n\topts.includeContentLength = responseConfig.includeContentLength === undefined ? FetchMock.config.includeContentLength : responseConfig.includeContentLength;\n\tif (opts.includeContentLength && typeof body === 'string' && !opts.headers.has('Content-Length')) {\n\t\topts.headers.set('Content-Length', body.length.toString());\n\t}\n\n\t// On the server we need to manually construct the readable stream for the\n\t// Response object (on the client this is done automatically)\n\tif (FetchMock.stream) {\n\t\tvar s = new FetchMock.stream.Readable();\n\t\tif (body != null) {\n\t\t\t//eslint-disable-line\n\t\t\ts.push(body, 'utf-8');\n\t\t}\n\t\ts.push(null);\n\t\tbody = s;\n\t}\n\tvar response = new FetchMock.Response(body, opts);\n\n\t// When mocking a followed redirect we must wrap the response in an object\n\t// which sets the redirected flag (not a writable property on the actual response)\n\tif (responseConfig.__redirectUrl) {\n\t\tresponse = Object.create(response, {\n\t\t\tredirected: {\n\t\t\t\tvalue: true\n\t\t\t},\n\t\t\turl: {\n\t\t\t\tvalue: responseConfig.__redirectUrl\n\t\t\t},\n\t\t\t// TODO extend to all other methods as requested by users\n\t\t\t// Such a nasty hack\n\t\t\ttext: {\n\t\t\t\tvalue: response.text.bind(response)\n\t\t\t},\n\t\t\tjson: {\n\t\t\t\tvalue: response.json.bind(response)\n\t\t\t}\n\t\t});\n\t}\n\n\treturn this.respond(Promise.resolve(response), resolveHoldingPromise);\n};\n\nFetchMock.prototype.respond = function (response, resolveHoldingPromise) {\n\tresponse.then(resolveHoldingPromise, resolveHoldingPromise);\n\n\treturn response;\n};\n\nFetchMock.prototype.flush = function () {\n\treturn Promise.all(this._holdingPromises);\n};\n\nFetchMock.prototype.push = function (name, call) {\n\tif (name) {\n\t\tthis._calls[name] = this._calls[name] || [];\n\t\tthis._calls[name].push(call);\n\t\tthis._matchedCalls.push(call);\n\t} else {\n\t\tthis._unmatchedCalls.push(call);\n\t}\n};\n\nFetchMock.prototype.restore = function () {\n\tthis._unMock();\n\tthis.reset();\n\tthis.routes = [];\n\treturn this;\n};\n\nFetchMock.prototype.reset = function () {\n\tthis._calls = {};\n\tthis._matchedCalls = [];\n\tthis._unmatchedCalls = [];\n\tthis._holdingPromises = [];\n\tthis.routes.forEach(function (route) {\n\t\treturn route.reset && route.reset();\n\t});\n\treturn this;\n};\n\nFetchMock.prototype.calls = function (name) {\n\treturn name ? this._calls[name] || [] : {\n\t\tmatched: this._matchedCalls,\n\t\tunmatched: this._unmatchedCalls\n\t};\n};\n\nFetchMock.prototype.lastCall = function (name) {\n\tvar calls = name ? this.calls(name) : this.calls().matched;\n\tif (calls && calls.length) {\n\t\treturn calls[calls.length - 1];\n\t} else {\n\t\treturn undefined;\n\t}\n};\n\nFetchMock.prototype.lastUrl = function (name) {\n\tvar call = this.lastCall(name);\n\treturn call && call[0];\n};\n\nFetchMock.prototype.lastOptions = function (name) {\n\tvar call = this.lastCall(name);\n\treturn call && call[1];\n};\n\nFetchMock.prototype.called = function (name) {\n\tif (!name) {\n\t\treturn !!(this._matchedCalls.length || this._unmatchedCalls.length);\n\t}\n\treturn !!(this._calls[name] && this._calls[name].length);\n};\n\nFetchMock.prototype.done = function (name) {\n\tvar _this2 = this;\n\n\tvar names = name ? [name] : this.routes.map(function (r) {\n\t\treturn r.name;\n\t});\n\t// Can't use array.every because\n\t// a) not widely supported\n\t// b) would exit after first failure, which would break the logging\n\treturn names.map(function (name) {\n\t\tif (!_this2.called(name)) {\n\t\t\tconsole.warn('Warning: ' + name + ' not called');\n\t\t\treturn false;\n\t\t}\n\t\t// would use array.find... but again not so widely supported\n\t\tvar expectedTimes = (_this2.routes.filter(function (r) {\n\t\t\treturn r.name === name;\n\t\t}) || [{}])[0].times;\n\n\t\tif (!expectedTimes) {\n\t\t\treturn true;\n\t\t}\n\n\t\tvar actualTimes = _this2.calls(name).length;\n\t\tif (expectedTimes > actualTimes) {\n\t\t\tconsole.warn('Warning: ' + name + ' only called ' + actualTimes + ' times, but ' + expectedTimes + ' expected');\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}).filter(function (bool) {\n\t\treturn !bool;\n\t}).length === 0;\n};\n\nFetchMock.config = {\n\tincludeContentLength: false,\n\tsendAsJson: true\n};\n\nFetchMock.prototype.configure = function (opts) {\n\t_extends(FetchMock.config, opts);\n};\n\nFetchMock.setImplementations = FetchMock.prototype.setImplementations = function (implementations) {\n\tFetchMock.Headers = implementations.Headers || FetchMock.Headers;\n\tFetchMock.Request = implementations.Request || FetchMock.Request;\n\tFetchMock.Response = implementations.Response || FetchMock.Response;\n\tFetchMock.Promise = implementations.Promise || FetchMock.Promise;\n};\n\nFetchMock.prototype.sandbox = function (Promise) {\n\tif (this.routes.length || this.fallbackResponse) {\n\t\tthrow new Error('.sandbox() can only be called on fetch-mock instances that don\\'t have routes configured already');\n\t}\n\tvar instance = new FetchMock();\n\n\t// this construct allows us to create a fetch-mock instance which is also\n\t// a callable function, while circumventing circularity when defining the\n\t// object that this function should be bound to\n\tvar boundMock = void 0;\n\tvar proxy = function proxy() {\n\t\treturn boundMock.apply(null, arguments);\n\t};\n\n\tvar functionInstance = _extends(proxy, // Ensures that the entire returned object is a callable function\n\tFetchMock.prototype, // all prototype methods\n\tinstance // instance data\n\t);\n\tfunctionInstance.bindMethods();\n\tboundMock = functionInstance.fetchMock;\n\tfunctionInstance.isSandbox = true;\n\tif (Promise) {\n\t\tfunctionInstance.Promise = Promise;\n\t}\n\n\treturn functionInstance;\n};\n\n['get', 'post', 'put', 'delete', 'head', 'patch'].forEach(function (method) {\n\tFetchMock.prototype[method] = function (matcher, response, options) {\n\t\treturn this.mock(matcher, response, _extends({}, options, { method: method.toUpperCase() }));\n\t};\n\tFetchMock.prototype[method + 'Once'] = function (matcher, response, options) {\n\t\treturn this.once(matcher, response, _extends({}, options, { method: method.toUpperCase() }));\n\t};\n});\n\nmodule.exports = FetchMock;"]},"metadata":{},"sourceType":"script"}